# This file is based on onde that was autogenerated by maturin v1.7.1 using:
#    maturin generate-ci github
name: ðŸ“¦

on:
  push:
    branches: [main, "mscroggs/pip"]
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - target: x86_64-unknown-linux-gnu
            container: quay.io/pypa/manylinux_2_28_x86_64
            wheel: wheels-linux-x86_64
          - target: x86_64-unknown-linux-gnu
            container: quay.io/pypa/manylinux_2_28_x86_64
            wheel: wheels-linux-x86
          - target: aarch64-unknown-linux-gnu
            container: ghcr.io/rust-cross/manylinux_2_28-cross:aarch64
            wheel: wheels-linux-aarch64
          - target: armv7-unknown-linux-gnueabihf
            container: ghcr.io/rust-cross/manylinux_2_28-cross:armv7
            wheel: wheels-linux-armv7
          - target: s390x-unknown-linux-gnu
            container: ghcr.io/rust-cross/manylinux_2_28-cross:s390x
            wheel: wheels-linux-s390x
          - target: powerpc64le-unknown-linux-gnu
            container: ghcr.io/rust-cross/manylinux2014-cross:ppc64
            wheel: wheels-linux-ppc64le
          - target: x86_64-unknown-linux-musl
            container: ghcr.io/rust-cross/rust-musl-cross:x86_64-musl
            wheel: wheels-musllinux-x86_64
          - target: x86_64-unknown-linux-musl
            container: ghcr.io/rust-cross/rust-musl-cross:x86_64-musl
            wheel: wheels-musllinux-x86
          - target: aarch64-unknown-linux-musl
            container: ghcr.io/rust-cross/rust-musl-cross:aarch64-musl
            wheel: wheels-musllinux-aarch64
          - target: armv7-unknown-linux-musleabihf
            container: ghcr.io/rust-cross/rust-musl-cross:armv7-musleabihf
            wheel: wheels-musllinux-armv7
    container: ubuntu-latest
    steps:
      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust-version }}
          components: rustfmt
      - name: Install OpenBLAS, LAPACK, OpenSSL
        run: yum -y install openblas-devel lapack-devel openssl-devel
      - uses: actions/checkout@v4

        # TODO: swap to `pip install maturin>=1.7.2` once there's a new release
      - name: Install maturin, CFFI
        run: |
          /opt/python/cp38-cp38/bin/python -m pip install git+https://github.com/PyO3/maturin.git
          /opt/python/cp38-cp38/bin/python -m pip install cffi

      - name: Build wheel
        run: /opt/python/cp38-cp38/bin/python -m maturin build --release --out dist -i /opt/python/cp38-cp38/bin/python --target ${{ matrix.platform.target }}

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.wheel }}
          path: dist

#  windows:
#    runs-on: ${{ matrix.platform.runner }}
#    strategy:
#      matrix:
#        platform:
#          - runner: windows-latest
#            target: x64
#          - runner: windows-latest
#            target: x86
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions/setup-python@v5
#        with:
#          python-version: 3.x
#          architecture: ${{ matrix.platform.target }}
#      - name: Build wheels
#        uses: PyO3/maturin-action@v1
#        with:
#          target: ${{ matrix.platform.target }}
#          args: --release --out dist --find-interpreter
#          sccache: 'true'
#      - name: Upload wheels
#        uses: actions/upload-artifact@v4
#        with:
#          name: wheels-windows-${{ matrix.platform.target }}
#          path: dist

#  macos:
#    runs-on: ${{ matrix.platform.runner }}
#    strategy:
#      matrix:
#        platform:
#          - runner: macos-12
#            target: x86_64
#          - runner: macos-14
#            target: aarch64
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions/setup-python@v5
#        with:
#          python-version: 3.x
#      - name: Build wheels
#        uses: PyO3/maturin-action@v1
#        with:
#          target: ${{ matrix.platform.target }}
#          args: --release --out dist --find-interpreter
#          sccache: 'true'
#      - name: Upload wheels
#        uses: actions/upload-artifact@v4
#        with:
#          name: wheels-macos-${{ matrix.platform.target }}
#          path: dist

#  sdist:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - name: Build sdist
#        uses: PyO3/maturin-action@v1
#        with:
#          command: sdist
#          args: --out dist
#      - name: Upload sdist
#        uses: actions/upload-artifact@v4
#        with:
#          name: wheels-sdist
#          path: dist

#  release:
#    name: Release
#    runs-on: ubuntu-latest
##     if: "startsWith(github.ref, 'refs/tags/')"
#    needs: [linux, windows, macos, sdist]
#    steps:
#      - uses: actions/download-artifact@v4
#      - name: Publish to PyPI
#        uses: PyO3/maturin-action@v1
#        env:
#          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
#        with:
#          command: upload
#          args: --non-interactive --skip-existing wheels-*/*
